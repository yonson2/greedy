name: CI
on:
  push:
    branches:
      - master
      - main
  pull_request:

env:
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal

jobs:
  rustfmt:
    name: Check Style
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Run Clippy
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install dav1d dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y libdav1d-dev dav1d

      - name: Install nasm
        uses: ilammy/setup-nasm@v1

      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install pip packages
        run: |
          pip install -U pip
          pip install -U wheel setuptools
          pip install -U meson ninja

      - name: Build dav1d
        env:
          DAV1D_DIR: dav1d_dir
          LIB_PATH: lib/x86_64-linux-gnu
        run: |
          git clone --branch 1.3.0 --depth 1 https://code.videolan.org/videolan/dav1d.git
          cd dav1d
          meson build -Dprefix=$HOME/$DAV1D_DIR -Denable_tools=false -Denable_examples=false --buildtype release
          ninja -C build
          ninja -C build install
          echo "PKG_CONFIG_PATH=$HOME/$DAV1D_DIR/$LIB_PATH/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/$DAV1D_DIR/$LIB_PATH" >> $GITHUB_ENV

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings -W clippy::pedantic -W clippy::nursery -W rust-2018-idioms

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install dav1d dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y libdav1d-dev dav1d

      - name: Install nasm
        uses: ilammy/setup-nasm@v1

      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install pip packages
        run: |
          pip install -U pip
          pip install -U wheel setuptools
          pip install -U meson ninja

      - name: Build dav1d
        env:
          DAV1D_DIR: dav1d_dir
          LIB_PATH: lib/x86_64-linux-gnu
        run: |
          git clone --branch 1.3.0 --depth 1 https://code.videolan.org/videolan/dav1d.git
          cd dav1d
          meson build -Dprefix=$HOME/$DAV1D_DIR -Denable_tools=false -Denable_examples=false --buildtype release
          ninja -C build
          ninja -C build install
          echo "PKG_CONFIG_PATH=$HOME/$DAV1D_DIR/$LIB_PATH/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/$DAV1D_DIR/$LIB_PATH" >> $GITHUB_ENV

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --all
